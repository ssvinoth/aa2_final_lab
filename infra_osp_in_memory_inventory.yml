---
- name: Create In-Memory Inventory with OSP Server Instances
  hosts: control_node
  connection: local
  gather_facts: false
  vars:
    guid: "{{ lookup('env','GUID') }}"
    home: "{{ lookup('env','HOME') }}"
    internal_domain: "example.com"
  tasks:
    - name: Collection instance info
      os_server_info:
        #cloud: "{{ guid }}-project"
        cloud: "{{ osp_cloud_project }}"
      register: instances

    - name: Build In-Memory inventory
      add_host:
        host: "{{ instance.name }}"
        group: "{{ instance.metadata.server_type }}"
        ansible_host: "{{ instance.private_v4 }}"
        ssh_private_key_file: "{{ home }}/.ssh/{{ guid }}key.pem"
      when: instance.metadata.AnsibleGroup == "osp_instances"
      loop: "{{ instances.openstack_servers }}"
      loop_control:
        loop_var: instance

    - name: Build In-Memory inventory - grouping osp_instances
      add_host:
        host: "{{ instance.name }}"
        group: "{{ instance.metadata.AnsibleGroup }}"
        ansible_host: "{{ instance.private_v4 }}"
        ssh_private_key_file: "{{ home }}/.ssh/{{ guid }}key.pem"
      when: instance.metadata.AnsibleGroup == "osp_instances"
      loop: "{{ instances.openstack_servers }}"
      loop_control:
        loop_var: instance


- name: Print current hosts
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - debug: var=groups

- name: Verify OpenStack Instances
  hosts: osp_instances
  tasks:
    - name: Verify connectivity
      ping:
      register: output

    - debug:
        msg: "{{ output }}"